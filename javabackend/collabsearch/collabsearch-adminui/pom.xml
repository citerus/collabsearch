<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>collabsearch</artifactId>
		<groupId>se.citerus</groupId>
		<version>1.0</version>
	</parent>
	<groupId>se.citerus</groupId>
	<artifactId>collabsearch-adminui</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>Vaadin Web Application</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<vaadin.version>6.8.2</vaadin.version>
		<gwt.version>2.3.0</gwt.version>
		<gwt.plugin.version>2.2.0</gwt.plugin.version>
		<port>8081</port>
		
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	    <maven.compiler.source>1.6</maven.compiler.source>
	    <maven.compiler.target>1.6</maven.compiler.target>
		
	    <spring.version>3.1.0.RELEASE</spring.version>
	    <aspectj.version>1.6.12</aspectj.version>
	    <aspectj-maven-plugin.version>1.4</aspectj-maven-plugin.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
<!-- 					<extraJvmArgs>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=4000</extraJvmArgs> -->
				</configuration>
			</plugin>
	
			<!-- Compile custom GWT components or widget dependencies with the GWT compiler -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwt.plugin.version}</version>
				<configuration>
					<!-- if you don't specify any modules, the plugin will find them -->
					<!-- <modules> <module>com.example.gwt.ColorPickerWidgetSet</module> 
						</modules> -->
					<webappDirectory>${project.build.directory}/${project.build.finalName}/VAADIN/widgetsets</webappDirectory>
					<!-- On Mac running Snow Leopard, add "-d32" -->
					<!-- This causes error messages (but build works) in phase "package": 
						two processes would use the same debug port -->
<!-- 					<extraJvmArgs>-Xmx512M -Xss1024k -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4000</extraJvmArgs> -->
<!-- 					<extraJvmArgs>-Xmx512M -Xss1024k -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=4000</extraJvmArgs> -->
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<runTarget>widgettest</runTarget>
					<hostedWebapp>${project.build.directory}/${project.build.finalName}</hostedWebapp>
					<noServer>true</noServer>
					<port>${port}</port> <!-- default: 8080 -->
					<compileReport>false</compileReport>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>resources</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-dev</artifactId>
						<version>${gwt.version}</version>
					</dependency>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-user</artifactId>
						<version>${gwt.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>1.0.2</version>
				<executions>
					<execution>
						<configuration>
							<!-- if you don't specify any modules, the plugin will find them -->
							<!-- 
							<modules> 
								<module>com.example.gwt.ColorPickerWidgetSet</module> 
							</modules>
							 -->
						</configuration>
						<goals>
							<goal>update-widgetset</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
	
			<!-- A simple Jetty test server at http://localhost:8080/collabsearch-adminui 
				can be launched with the Maven goal jetty:run and stopped with jetty:stop -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.24</version>
				<configuration>
					<stopPort>9966</stopPort>
					<stopKey>collabsearch-adminui</stopKey>
					<!-- Redeploy every x seconds if changes are detected, 0 for no automatic 
						redeployment -->
					<scanIntervalSeconds>0</scanIntervalSeconds>
					<!-- make sure Jetty also finds the widgetset -->
					<webAppConfig>
						<contextPath>/collabsearch-adminui</contextPath>
						<baseResource implementation="org.mortbay.resource.ResourceCollection">
							<!-- Workaround for Maven/Jetty issue http://jira.codehaus.org/browse/JETTY-680 -->
							<!-- <resources>src/main/webapp,${project.build.directory}/${project.build.finalName}</resources> -->
							<resourcesAsCSV>src/main/webapp,${project.build.directory}/${project.build.finalName}</resourcesAsCSV>
						</baseResource>
					</webAppConfig>
<!-- 					<extraJvmArgs>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=4000</extraJvmArgs> -->
					<systemProperties>
						<systemProperty>
							<name>jetty.port</name>
							<value>${port}</value>
						</systemProperty>
					</systemProperties>
				</configuration>
			</plugin>
			
			<!-- Experiment to get Vaadin to run with Tomcat -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<url>http://localhost:${port}</url>
					<port>${port}</port>
					<stopPort>9966</stopPort>
					<stopKey>collabsearch-adminui</stopKey>
					<!-- Redeploy every x seconds if changes are detected, 0 for no automatic 
						redeployment -->
					<scanIntervalSeconds>0</scanIntervalSeconds>
					<webAppConfig>
						<contextPath>/collabsearch-adminui</contextPath>
					</webAppConfig>
				</configuration>
			</plugin>
			
			<!-- spring aspects compiler -->
			<plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>aspectj-maven-plugin</artifactId>
		        <version>${aspectj-maven-plugin.version}</version>
		        <configuration>
		          <!-- Required as the plugin does not resolve this by default -->
		          <source>${maven.compiler.source}</source>
		          <target>${maven.compiler.target}</target>
		          <aspectLibraries>
		            <aspectLibrary>
		              <groupId>org.springframework</groupId>
		              <artifactId>spring-aspects</artifactId>
		            </aspectLibrary>
		          </aspectLibraries>
		        </configuration>
		        <executions>
		          <execution>
		            <goals>
		              <goal>compile</goal>
		              <goal>test-compile</goal>
		            </goals>
		          </execution>
		        </executions>
	     	</plugin>
			
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. 
					It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>gwt-maven-plugin</artifactId>
										<versionRange>[2.2.0,)</versionRange>
										<goals>
											<goal>resources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.vaadin</groupId>
										<artifactId>vaadin-maven-plugin</artifactId>
										<versionRange>[1.0.2,)</versionRange>
										<goals>
											<goal>
												update-widgetset
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<repositories>
		<repository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
			</snapshots>
		</repository>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>codehaus-snapshots</id>
			<url>http://nexus.codehaus.org/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
			<classifier>sources</classifier>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>tomcat</groupId>
			<artifactId>servlet-api</artifactId>
			<version>5.5.23</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.collections</groupId>
			<artifactId>collections-generic</artifactId>
			<version>4.01</version>
		</dependency>
		<dependency>
			<groupId>se.citerus</groupId>
			<artifactId>collabsearch-model</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>se.citerus</groupId>
			<artifactId>collabsearch-store</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>googlemapwidget</artifactId>
			<version>0.9.13</version>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>maps</artifactId>
			<version>1.1.1</version>
		</dependency>
		
		<!-- Spring -->
	    <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Required due to a bug in Spring, see https://jira.springsource.org/browse/SPR-6819 -->
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
			<optional>true</optional>
		</dependency>
		<!-- AspectJ dependencies -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
	</dependencies>

</project>
